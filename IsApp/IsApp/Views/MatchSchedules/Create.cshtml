@using IsApp.Domain.Models
@model IsApp.Domain.Models.MatchSchedule

@{
    var teams = (IEnumerable<Team>)ViewData["Team"];
    var events = (SportsEvent)ViewData["Events"];

    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>MatchSchedule</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeamId1" class="control-label"></label>
                @Html.DropDownListFor(x => Model.TeamId1, new SelectList(teams, "Id", "Name"), new { @class = "form-control" })
                <span asp-validation-for="TeamId1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeamId2" class="control-label"></label>
                @Html.DropDownListFor(x => Model.TeamId2, new SelectList(teams, "Id", "Name"), new { @class = "form-control" })
                <span asp-validation-for="TeamId2" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="SportEventsId" id="SportEventsId" value="@events.Id" class="form-control" />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
